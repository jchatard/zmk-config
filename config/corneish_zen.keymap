/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "keymap_optimot.h"

#define DEFAULT 0
#define SYMB   1
#define MOVE   2
#define PAD    3
#define CMD    4
#define ADJUST 5

#define MEH LA(LS(LCTRL))

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <180>;
    quick-tap-ms = <180>;              // repeat on tap-into-hold
    hold-trigger-key-positions = <0>;  // tap on interrupt
};

/ {
        behaviors {
                hm: homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <150>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
                lh: left_hand_positional_hold_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "LEFT_POSITIONAL_HOLD_TAP";
                    #binding-cells = <2>;
                    flavor = "tap-unless-interrupted";
                    tapping-term-ms = <200>;                        // Defines how long a key must be pressed to trigger Hold behavior.
                    quick-tap-ms = <150>;                           // Handles key repeat.
                    global-quick-tap;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;    // <---[[right-hand keys]]
                };
                rh: right_hand_positional_hold_tap {
                    compatible = "zmk,behavior-hold-tap";
                    label = "RIGHT_POSITIONAL_HOLD_TAP";
                    #binding-cells = <2>;
                    flavor = "tap-unless-interrupted";
                    tapping-term-ms = <200>;                        // Defines how long a key must be pressed to trigger Hold behavior.
                    quick-tap-ms = <150>;                           // Handles key repeat.
                    global-quick-tap;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;    // <---[[left-hand keys]]
                };
            };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Optimot";

// ---------------------------------------------------------------------------------------------------
// |  0 |  1 |  2 |  3 |  4 |  5 | |  6 |  7 |  8 |  9 | 10 | 11 |
// | 12 | 13 | 14 | 15 | 16 | 17 | | 18 | 19 | 20 | 21 | 22 | 23 |
// | 24 | 25 | 26 | 27 | 28 | 29 | | 30 | 31 | 32 | 33 | 34 | 35 |
//                | 36 | 37 | 38 | | 39 | 40 | 41 |

// ---------------------------------------------------------------------------------------------------
// | TAB      |  À  |  J  |  O    |  É   |  B   |   |  F   |  D    |  L  |  '  |  Qu |  X |
// | MEH      |  A  | ̂I  |  ⌥E   |  ⇧U  |  ,   |   |  P   |  T    |  S  |  R  |  N  |  ^ |
// | LSHIFT   |  K  |  Y  |  È->  |  PAD.|  W   |   |  G   |  C    |  M  |  H  |  V  |  Z |
//                        |  ->   |  SYM | GUI  |   | ⇧SPC | ⏎ CMD | SYMB|

                        bindings = <
   &kp TAB    &kp OP_AGRV &kp OP_J       &kp OP_O         &kp OP_EACU       &kp OP_B         &kp OP_F         &kp OP_D        &kp OP_L      &kp OP_QUOT    &kp OP_Q &kp OP_X
   &kp MEH    &kp OP_A    &lh LCTRL OP_I &lh LALT OP_E    &lh LSHIFT OP_U   &kp OP_COMM      &kp OP_P         &rh RSHIFT OP_T &rh RALT OP_S &rh RCTRL OP_R &kp OP_N &kp OP_CIR
   &kp LSHIFT &kp OP_K    &kp OP_Y       &lt MOVE OP_EGRV &lt PAD OP_DOT    &kp OP_W         &kp OP_G         &kp OP_C        &lt SYMB OP_M &kp OP_H       &kp OP_V &kp OP_Z
                                         &mo MOVE         &mo SYMB          &kp LGUI         &rh RSHIFT SPACE &mo CMD         &mo SYMB
                        >;
                };
                lower_layer {
                        label = "$€@#/()";
// -----------------------------------------------------------------------------------------
// |   €  |  @  |  #  |  _  |  %  |  =  |   | DEL  |  [  |  ]  |  '  |     |      | 
// |   $  |  «  |  »  |  "  |  -  |  +  |   | BSPC |  (  |  )  |  `  |     |      |
// |  ⌘Z  | ⌘R  | "|" |  /  |  \  |  *  |   |   /  |  {  |  }  |  "  |     |      |
//                    |     |     |     |   |   .  |  <  |  >  |
                        bindings = <
   &kp OP_EURO   &kp OP_AT      &kp OP_HASH  &kp OP_UNDS  &kp OP_PERC  &kp OP_EQL      &kp DEL     &kp OP_LBRC &kp OP_RBRC  &kp OP_QUOT &trans &trans
   &kp OP_DLR    &kp OP_LDAQ    &kp OP_RDAQ  &kp OP_DQUO  &kp OP_MIN   &kp OP_PLUS     &kp BSPC    &kp OP_LPRN &kp OP_RPRN  &kp OP_LSQU &trans &trans
   &kp LG(OP_Z)  &kp LG(OP_R)   &kp OP_PIPE  &kp OP_SLSH  &kp OP_BSLS  &kp OP_ASTR     &kp OP_SLSH &kp OP_LCBR &kp OP_RCBR  &kp OP_DQUO &trans &trans
                           	             &trans       &trans       &trans          &kp OP_DOT  &kp OP_LABK &kp OP_RABK
                        >;
                };

                raise_layer {
                        label = "Move";
// -------------------------------------------------------------------------------------------------
// |     |      |      |      |     |       |   |       | Pup     |  Up  | Pdow      |      |      |
// |     |      |      |      |     |       |   |       | Left    |  Dwn | Right     |      |      |
// |     |      |      |      |     |       |   |       | Home    |      | End       |      |      |
//                     |      |     |       |   |       |         |      |
                        bindings = <
   &trans &trans &trans &trans &trans &trans      &trans &kp PG_UP &kp UP   &kp PG_DN  &trans &trans
   &trans &trans &trans &trans &trans &trans      &trans &kp LEFT  &kp DOWN &kp RIGHT  &trans &trans
   &trans &trans &trans &trans &trans &trans      &trans &kp HOME  &trans   &kp END    &trans &trans
                        &trans &trans &trans      &trans &trans    &trans
                        >;
                };


                pad_layer {
                        label = "Pad";
// -----------------------------------------------------------------------------------
// |      |     |     |      |       |      |   |  DEL|  7  |  8  |  9  |  -  |  ×   |
// |      |     |     |      |       |      |   | BSPC|  4  |  5  |  6  |  *  |  =   |
// |      |     |     |      |       |      |   |  /  |  1  |  2  |  3  |  +  |  RET |
//                    |      |       |      |   |  .  |  0  |  ,  |
                        bindings = <
   &trans &trans &trans &trans &trans &trans     &kp DEL     &kp OP_7     &kp OP_8    &kp OP_9 &kp OP_MIN  &kp OP_MUL
   &trans &trans &trans &trans &trans &trans     &kp BSPC    &kp OP_4     &kp OP_5    &kp OP_6 &kp OP_ASTR &kp OP_EQL
   &trans &trans &trans &trans &trans &trans     &kp OP_SLSH &kp OP_1     &kp OP_2    &kp OP_3 &kp OP_PLUS &kp RET
                        &trans &trans &trans     &kp OP_DOT  &kp OP_0     &kp OP_COMM
                        >;
                };

                cmd_layer {
                        label = "CMD";
// --------------------------------------------------------------------------------------------------
// | ESC      |CAPS  |      |      |      | DEL    |   | DEL    |      | ESC   |      |      |      |
// |SHIFT     |      |      |      |      | BSPC   |   | BSPC   |  ⌘Z  | RET   |      |      |      |
// |          |      |      |      |      |        |   |        |      |       |      |      |      |
//                          |      |      |        |   |        |      |       |
                          bindings = <
   &kp ESC     &kp CAPS &trans &trans &trans &kp DEL      &kp DEL  &trans       &kp ESC &trans &trans &trans
   &kp LSHIFT  &trans   &trans &trans &trans &kp BSPC     &kp BSPC &kp LG(OP_Z) &kp RET &trans &trans &trans
   &trans      &trans   &trans &trans &trans &trans       &trans   &trans       &trans  &trans &trans &trans
                               &trans &trans &trans       &trans   &trans       &trans
                        >;
                };

                adjust_layer {
                        label = "Adjust";
// -----------------------------------------------------------------------------------------
// |  TAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 |  F10| BKSP |
// |      |  F11|  F12|  F13|  F14|  F15|   |  F16|  F17|  F18|  F19|  F20| BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8  &kp F9    &kp F10 &trans
   &trans     &kp F11      &kp F12      &kp F13      &kp F14      &kp F15        &kp F16  &kp F17  &kp F18 &kp F19   &kp F20 &trans
   &kp LSHFT  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans   &trans  &trans    &trans  &trans
                                        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

        };
};